{"version":3,"sources":["components/Card.js","components/Input.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","_ref","stage","cardNumber","cardholderName","validThru","displayCardNum","securityCode","value","slice","length","displayValidThru","cardNumArr","split","react_default","a","createElement","className","concat","index_esm","map","group","i","key","num","j","char","includes","Input","label","regex","setFunc","error","setError","disabled","onChange","event","target","match","Object","objectSpread","max","App","_useState","useState","_useState2","slicedToArray","setStage","_useState3","_useState4","setCardNumber","_useState5","_useState6","setCardholderName","_useState7","_useState8","setValidThru","_useState9","_useState10","setSecurityCode","_useState11","_useState12","croak","setCroak","_useState13","_useState14","handleButton","setTimeout","document","querySelector","focus","onKeyDown","src_components_Card","src_components_Input","RegExp","onClick","onAnimationEnd","type","Boolean","window","location","hostname","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af7ca3da.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.scss'\nimport { FaReact } from 'react-icons/fa'\n\nconst Card = ({ stage, cardNumber, cardholderName, validThru, securityCode }) => {\n  const displayCardNum = cardNumber.value + 'XXXXXXXXXXXXXXXX'.slice(cardNumber.value.length)\n  const displayValidThru = validThru.value.slice(0,2) + 'MM'.slice(validThru.value.length) \n    + '/' + validThru.value.slice(2) + 'YY'.slice(validThru.value.slice(2).length)\n  const cardNumArr = [ \n    displayCardNum.slice(0, 4).split(''), \n    displayCardNum.slice(4, 8).split(''),\n    displayCardNum.slice(8, 12).split(''),\n    displayCardNum.slice(12, 16).split('')\n  ]\n  \n  return (\n    <div className='card-container'>\n      <div className={`card ${stage === 'security-code' ? 'flipped' : ''}`}>\n        <div className='face front'>\n          <FaReact />\n          <div className={`card-number ${stage === 'card-number' ? 'active' : 'inactive'}`}>\n          {cardNumArr.map((group,i) => {\n            return ( \n            <span className={`group group-${i}`} key={i}>\n              {group.map((num, j) => {\n                if (num !== 'X') return <span key={`${i + j}`} className=\"num\">{num}</span>\n                else return <span key={i + j}>{num}</span>\n              })}\n            </span>)\n            })}\n          </div>\n          <div className=\"detail cardholder-name\">\n            <span>CARDHOLDER NAME</span>\n            <span className={ `${stage === 'cardholder-name' ? 'active' : 'inactive'}\n              ${cardholderName.value ? 'text' : ''}`\n            }>\n              {cardholderName.value ? cardholderName.value : 'name surname'}\n            </span>\n          </div>\n          <div className=\"detail valid-thru\">\n            <span>VALID THRU</span>\n            <span className={stage === 'valid-thru' ? 'active' : 'inactive'}>\n              {displayValidThru.split('').map((char, i) => {\n                if (validThru.value.includes(char) || (char === '/' && validThru.value.length >= 2)) {\n                  return <span key={i} className=\"text\">{char}</span>\n                } else {\n                  return <span key={i}>{char}</span>\n                }\n              })}\n            </span>\n          </div>\n        </div>\n        <div className='face back'>\n          <div>682</div>\n          <FaReact />          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React from 'react'\nimport './Input.scss'\n\nconst Input = ({ className, stage, label, value, regex, setFunc, error, setError }) => {\n\n  function handleChange(event) {\n    if (event.target.value.match(regex)) {\n      if (error) setError('')\n      setFunc({ ...value, value: event.target.value})\n    } else if (value.value.length !== value.max) {\n      setError('Valid characters only')\n    }\n  }\n  return (\n    <div className={`input-container ${className === stage ? 'enabled' : 'disabled'} ${error ? 'error' : ''}`}>\n      {/* <div className=\"labels\"> */}\n        <span>{label}</span>\n        {error && <span className=\"error\">{error}</span>}\n      {/* </div> */}\n      <input disabled={className === stage ? false : true } onChange={handleChange} value={value.value} />\n    </div>\n  )\n}\n\nexport default Input","import React, { useState } from 'react'\nimport './App.scss'\nimport { Card, Input } from './'\n\nconst App = () => {\n\n  const [stage, setStage] = useState('card-number')\n  const [cardNumber, setCardNumber] = useState({ value:'', max: 16})\n  const [cardholderName, setCardholderName] = useState({ value: '', max: 21})\n  const [validThru, setValidThru] = useState({ value: '', max: 4})\n  const [securityCode, setSecurityCode] = useState({ value: '', max: 3})\n  const [croak, setCroak] = useState(false)\n  const [error, setError] = useState('')\n\n  const handleButton = stage => {\n    if (stage === 'card-number') {\n      if (cardNumber.value.length === cardNumber.max) setStage('cardholder-name')\n      else setError ('Must be a valid card number')\n    } else if (stage === 'cardholder-name') {\n      if (cardholderName.value.length > 0) setStage('valid-thru')\n      else setError('Must be a valid name')\n    } else if (stage === 'valid-thru') {\n      if (validThru.value.length === validThru.max) setStage('security-code')\n      else setError('Must be a valid month/year')\n    } else if (stage === 'security-code') {\n      if (securityCode.value.length === securityCode.max) {\n        setTimeout(() => setSecurityCode({ ...securityCode, value: '' }), 200)\n        setStage('card-number')\n        setCardNumber({...cardNumber, value: ''})\n        setCardholderName({ ...cardholderName, value: '' })\n        setValidThru({ ...validThru, value: '' })\n      } else {\n        setError('Must be a valid security code')\n      }\n    }\n    setTimeout(() => document.querySelector('div.enabled input').focus(),200)\n  }\n\n  const handleKey = event => {\n    if (event.key === 'Enter') {\n      setCroak(true)\n      handleButton(stage)\n    }\n  }\n  return (\n    <div className='app' onKeyDown={handleKey}>\n      <Card stage={stage} \n        cardNumber={cardNumber} \n        cardholderName={cardholderName}\n        validThru={validThru}\n        securityCode={securityCode}\n      />\n      <span className='headline'>Type in your card details:</span>\n      <div className={`inputs-container ${stage}`}>\n        <Input \n          stage={stage}\n          className='card-number'\n          label='Card Number'\n          setFunc={setCardNumber}\n          value={cardNumber}\n          regex={new RegExp(`^[0-9]{0,${cardNumber.max}}$`)}\n          error={error}\n          setError={setError}\n        />\n        <Input \n          stage={stage}\n          className='cardholder-name'\n          label='Cardholder Name'\n          setFunc={setCardholderName}\n          value={cardholderName}\n          regex={new RegExp(`^[a-z,A-Z ]{0,${cardholderName.max}}$`)}\n          error={error}\n          setError={setError}\n        />\n        <Input \n          stage={stage}\n          className='valid-thru'\n          label='Valid Thru'\n          setFunc={setValidThru}\n          value={validThru}\n          regex={new RegExp(`^[0-9]{0,${validThru.max}}$`)}\n          error={error}\n          setError={setError}\n        />\n        <Input \n          stage={stage}\n          className='security-code'\n          label='Security Code (CVV)'\n          setFunc={setSecurityCode}\n          value={securityCode}\n          regex={new RegExp(`^[0-9]{0,${securityCode.max}}$`)}\n          error={error}\n          setError={setError}\n        />\n      </div>\n      <button className={croak ? 'croak' : ''} \n      onClick={() => { \n        setCroak(true) \n        handleButton(stage)\n      }} \n      onAnimationEnd={() => setCroak(false)}\n      type='button'>\n        {stage === 'security-code' ? 'Done' : 'Next'}\n      </button> \n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}